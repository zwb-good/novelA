<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemon.dao.BookMapper">
  <resultMap id="BaseResultMap" type="com.lemon.pojo.Book">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="author" jdbcType="VARCHAR" property="author" />
    <result column="url" jdbcType="VARCHAR" property="url" />
    <result column="novelTypeId" jdbcType="INTEGER" property="novelTypeId" />
    <result column="abstractText" jdbcType="VARCHAR" property="abstractText" />
  </resultMap>
  <resultMap id="AndTypeResultMap" type="com.lemon.pojo.Book">
    <id column="book_id" jdbcType="INTEGER" property="id" />
    <result column="book_name" jdbcType="VARCHAR" property="name" />
    <result column="book_author" jdbcType="VARCHAR" property="author" />
    <result column="book_url" jdbcType="VARCHAR" property="url" />
    <result column="book_novelTypeId" jdbcType="INTEGER" property="novelTypeId" />
    <result column="book_abstractText" jdbcType="VARCHAR" property="abstractText" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, name, author, url, novelTypeId, abstractText
  </sql>
  <sql id="AndType_Column_List">
    book.id as book_id,
	book.`name` as book_name,
	book.author as book_author,
	book.url as book_url,
	book.novelTypeId as book_novelTypeId,
	book.abstractText as book_abstractText,
	noveltype.id as noveltype_id,
	noveltype.`name` as noveltype_name,
	noveltype.url as noveltype_url,
	noveltype.labelId as noveltype_labelId,
	label.id as label_id,
	label.`name` as label_name
  </sql>
  

  <select id="selectByExample" parameterType="com.lemon.pojo.BookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from book
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from book
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lemon.pojo.BookExample">
    delete from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lemon.pojo.Book">
    insert into book (id, name, author, 
      url, novelTypeId, abstractText
      )
    values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR}, #{author,jdbcType=VARCHAR}, 
      #{url,jdbcType=VARCHAR}, #{novelTypeId,jdbcType=INTEGER}, #{abstractText,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.lemon.pojo.Book">
    insert into book
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="author != null">
        author,
      </if>
      <if test="url != null">
        url,
      </if>
      <if test="novelTypeId != null">
        novelTypeId,
      </if>
      <if test="abstractText != null">
        abstractText,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        #{author,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        #{url,jdbcType=VARCHAR},
      </if>
      <if test="novelTypeId != null">
        #{novelTypeId,jdbcType=INTEGER},
      </if>
      <if test="abstractText != null">
        #{abstractText,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lemon.pojo.BookExample" resultType="java.lang.Long">
    select count(*) from book
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update book
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.author != null">
        author = #{record.author,jdbcType=VARCHAR},
      </if>
      <if test="record.url != null">
        url = #{record.url,jdbcType=VARCHAR},
      </if>
      <if test="record.novelTypeId != null">
        novelTypeId = #{record.novelTypeId,jdbcType=INTEGER},
      </if>
      <if test="record.abstractText != null">
        abstractText = #{record.abstractText,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update book
    set id = #{record.id,jdbcType=INTEGER},
      name = #{record.name,jdbcType=VARCHAR},
      author = #{record.author,jdbcType=VARCHAR},
      url = #{record.url,jdbcType=VARCHAR},
      novelTypeId = #{record.novelTypeId,jdbcType=INTEGER},
      abstractText = #{record.abstractText,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lemon.pojo.Book">
    update book
    <set>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="author != null">
        author = #{author,jdbcType=VARCHAR},
      </if>
      <if test="url != null">
        url = #{url,jdbcType=VARCHAR},
      </if>
      <if test="novelTypeId != null">
        novelTypeId = #{novelTypeId,jdbcType=INTEGER},
      </if>
      <if test="abstractText != null">
        abstractText = #{abstractText,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lemon.pojo.Book">
    update book
    set name = #{name,jdbcType=VARCHAR},
      author = #{author,jdbcType=VARCHAR},
      url = #{url,jdbcType=VARCHAR},
      novelTypeId = #{novelTypeId,jdbcType=INTEGER},
      abstractText = #{abstractText,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>