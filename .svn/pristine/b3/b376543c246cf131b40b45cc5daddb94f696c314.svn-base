package com.lemon.controller;

import java.io.PrintWriter;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.List;

import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.gson.Gson;
import com.lemon.pojo.Comment;
import com.lemon.service.CommentService;
import com.lemon.utils.DateConvert;
import com.lemon.utils.JsonMsg;
import com.lemon.utils.JsonRs;

@Controller
@RequestMapping("/CommentAction")
public class CommentController {
	@Autowired
	private CommentService commentService;
	
	@RequestMapping("/insert")
	@ResponseBody
	public void insert(Comment comment,@RequestParam(value = "callback") String callback,
			HttpServletResponse response) throws Exception {
		response.setContentType("application/json;charset=utf-8");
		try {
			PrintWriter out = response.getWriter();
			Date date = new Date();
			//System.out.println(date);
			//SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd HH:mm:ss");
			//Date time = new DateConvert().convert(dateFormat.format(date));
			//System.out.println(time);
			comment.setTime(date);
			int total = commentService.insert(comment);
			if(total == 1){
				out.print(callback + "(" + new Gson().toJson(new JsonMsg("添加成功", true)) + ")");
			}else {
				out.print(callback + "(" + new Gson().toJson(new JsonMsg("添加失败", false)) + ")");
			}
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/get")
	@ResponseBody
	public void select(Integer bookId,@RequestParam(value = "callback") String callback,
			HttpServletResponse response) throws Exception {
		response.setContentType("application/json;charset=utf-8");
		try {
			PrintWriter out = response.getWriter();
			List<Comment> list = commentService.select(bookId);
			for(int i=0; i<list.size(); i++){
				if(list.get(i).getLikes() == null){
					list.get(i).setLikes(0);
				}
				if(list.get(i).getComments() == null){
					list.get(i).setComments(0);
				}
			}
			System.out.println(list.get(1).getTime());
			out.print(callback + "(" + new Gson().toJson(new JsonRs("查询成功", true, list.size(), list)) + ")");
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
	
	@RequestMapping("/getByCommentId")
	@ResponseBody
	public void getByCommentId(Integer id,@RequestParam(value = "callback") String callback,
			HttpServletResponse response) throws Exception {
		response.setContentType("application/json;charset=utf-8");
		try {
			PrintWriter out = response.getWriter();
			List<Comment> list = commentService.selectByCommentId(id);
			for(int i=0; i<list.size(); i++){
				if(list.get(i).getLikes() == null){
					list.get(i).setLikes(0);
				}
				if(list.get(i).getComments() == null){
					list.get(i).setComments(0);
				}
			}
			out.print(callback + "(" + new Gson().toJson(new JsonRs("查询成功", true, list.size(), list)) + ")");
			out.flush();
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
