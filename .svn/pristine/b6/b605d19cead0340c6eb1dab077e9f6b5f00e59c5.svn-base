package com.lemon.test;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.net.URLConnection;
import java.util.ArrayList;
import java.util.List;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import com.lemon.pojo.Content;
import com.lemon.utils.JsonRs;

public class ReadTest {
	public static void main(String[] args) {
        int HttpResult; // 服务器返回的状态
        String filePath = "http://pry165fg6.bkt.clouddn.com/test.txt";
        String encoding = "utf8";
        List<Content> list = new ArrayList<>();
        try {
        	 URL url =new URL(filePath); // 创建URL
             URLConnection urlconn = url.openConnection(); // 试图连接并取得返回状态码
             urlconn.connect();
             HttpURLConnection httpconn =(HttpURLConnection)urlconn;
             HttpResult = httpconn.getResponseCode();
             if(HttpResult != HttpURLConnection.HTTP_OK) {
                 System.out.print("无法连接到");
             } else {
                 int filesize = urlconn.getContentLength(); // 取数据长度
                 InputStreamReader isReader = new InputStreamReader(urlconn.getInputStream(),encoding);
                 BufferedReader bufferedReader = new BufferedReader(isReader);
        	
                String lineTxt = null;
                Long count = (long) 0;
                boolean bflag=false;
                int n=0;
                String newStr=null;
                String titleName=null;
                String newChapterName = null;//新章节名称
                String substring=null;
                int indexOf=0;
                int indexOf1=0;
                int line=0;
                //小说内容类
                Content content;
                while ((lineTxt = bufferedReader.readLine()) != null) {
                    content=new Content();
                    //小说名称
                    content.setName("斗破苍穹");
 
                    count++;
                    // 正则表达式
                    Pattern p = Pattern.compile("(^\\s*第)(.{1,9})[章节卷集部篇回](\\s{1})(.*)($\\s*)");
 
                    Matcher matcher = p.matcher(lineTxt);
                    Matcher matcher1 = p.matcher(lineTxt);
 
                    newStr=newStr+lineTxt;
 
                    while (matcher.find()) {
                        titleName = matcher.group();
                        //章节去空
                        newChapterName = titleName.trim();
                        //获取章节
                        //System.out.println("new:"+newChapterName);
                        content.setChapter(newChapterName);
                        indexOf1=indexOf;
                        //System.out.println(indexOf);
                        indexOf = newStr.indexOf(newChapterName);
                        // System.out.println(newChapterName + ":" + "第" + count + "行"); // 得到返回的章
                        if(bflag) {
                            bflag=false;
                            break;
                        }
                        if(n==0) {
                            indexOf1 = newStr.indexOf(newChapterName);
                        }
                        n=1;
                        bflag=true;
                        //System.out.println(content.getChapter());
                    }
                    while(matcher1.find()) {
                        if(indexOf!=indexOf1) {
                            //根据章节数量生成
                            content.setNumber(++line);
                            content.setId(line);
                            substring = newStr.substring(indexOf1, indexOf);
                            //System.out.println(substring);
                            content.setContent(substring);
                            list.add(content);
                        }
 
                    }
                }
                bufferedReader.close();
                System.out.println(new JsonRs("",true,list.size(),list));
             }
        } catch (Exception e) {
            System.out.println("读取文件内容出错");
            e.printStackTrace();
        }
    }
}
