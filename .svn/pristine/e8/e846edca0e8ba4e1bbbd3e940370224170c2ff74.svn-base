<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lemon.dao.CommentMapper">
  <resultMap id="BaseResultMap" type="com.lemon.pojo.Comment">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="bookId" jdbcType="INTEGER" property="bookId" />
    <result column="content" jdbcType="VARCHAR" property="content" />
    <result column="time" jdbcType="TIMESTAMP" property="time" />
    <result column="likes" jdbcType="INTEGER" property="likes" />
    <result column="comments" jdbcType="INTEGER" property="comments" />
  </resultMap>
  <resultMap id="AndReaderResultMap" type="com.lemon.pojo.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="id" />
    <result column="comment_userId" jdbcType="INTEGER" property="userId" />
    <result column="comment_bookId" jdbcType="INTEGER" property="bookId" />
    <result column="comment_content" jdbcType="VARCHAR" property="content" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="time" />
    <result column="comment_likes" jdbcType="INTEGER" property="likes" />
    <result column="comment_comments" jdbcType="INTEGER" property="comments" />
    <association property="reader" javaType="com.lemon.pojo.Reader">
      <id column="reader_id" property="id" />
      <result column="reader_name" property="name" />
      <result column="reader_sex" property="sex" />
      <result column="reader_signature" property="signature" />
      <result column="reader_headUrl" property="headUrl" />
      <result column="reader_userId" property="userId" />
    </association>
  </resultMap>
  <resultMap id="AndBookResultMap" type="com.lemon.pojo.Comment">
    <id column="comment_id" jdbcType="INTEGER" property="id" />
    <result column="comment_userId" jdbcType="INTEGER" property="userId" />
    <result column="comment_bookId" jdbcType="INTEGER" property="bookId" />
    <result column="comment_content" jdbcType="VARCHAR" property="content" />
    <result column="comment_time" jdbcType="TIMESTAMP" property="time" />
    <result column="comment_likes" jdbcType="INTEGER" property="likes" />
    <result column="comment_comments" jdbcType="INTEGER" property="comments" />
    <association property="book" javaType="com.lemon.pojo.Book">
      <id column="book_id" property="id" />
      <result column="book_name" property="name" />
      <result column="book_author" property="author" />
      <result column="book_url" property="url" />
      <result column="book_novelTypeId" property="novelTypeId" />
      <result column="book_abstractText" property="abstractText" />
    </association>
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, bookId, content, time, likes, comments
  </sql>
  <sql id="AndReader_Column_List">
    comment.id as comment_id, 
    comment.userId as comment_userId, 
    comment.bookId as comment_bookId, 
    comment.content as comment_content, 
    DATE_FORMAT(comment.time,'%Y-%m-%d %H:%i:%s') as comment_time,
    <!-- comment.time as comment_time,  -->
    comment.likes as comment_likes, 
    comment.comments as comment_comments,
    reader.id as reader_id, 
    reader.name as reader_name, 
    reader.sex as reader_sex, 
    reader.signature as reader_signature, 
    reader.headUrl as reader_headUrl, 
    reader.userId as reader_userId 
  </sql>
  <sql id="AndBook_Column_List">
    comment.id as comment_id, 
    comment.userId as comment_userId, 
    comment.bookId as comment_bookId, 
    comment.content as comment_content, 
    DATE_FORMAT(comment.time,'%Y-%m-%d %H:%i:%s') as comment_time,
    <!-- comment.time as comment_time,  -->
    comment.likes as comment_likes, 
    comment.comments as comment_comments,
    book.id as book_id,
	book.`name` as book_name,
	book.author as book_author,
	book.url as book_url,
	book.novelTypeId as book_novelTypeId,
	book.abstractText as book_abstractText 
  </sql>
  <select id="selectByExampleAndReader" parameterType="com.lemon.pojo.CommentExample" resultMap="AndReaderResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="AndReader_Column_List" />
    FROM reader
	INNER JOIN `comment` ON `comment`.userId = reader.userId
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyAndReader" parameterType="java.lang.Integer" resultMap="AndReaderResultMap">
    select 
    <include refid="AndReader_Column_List" />
    FROM reader
	INNER JOIN `comment` ON `comment`.userId = reader.userId
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExampleAndBook" parameterType="com.lemon.pojo.CommentExample" resultMap="AndBookResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="AndBook_Column_List" />
    FROM book
	INNER JOIN `comment` ON `comment`.bookId = book.id
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKeyAndBook" parameterType="java.lang.Integer" resultMap="AndBookResultMap">
    select 
    <include refid="AndReader_Column_List" />
    FROM book
	INNER JOIN `comment` ON `comment`.bookId = book.id
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByExample" parameterType="com.lemon.pojo.CommentExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from comment
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from comment
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.lemon.pojo.CommentExample">
    delete from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.lemon.pojo.Comment">
    insert into comment (id, userId, bookId, 
      content, time, likes, 
      comments)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{bookId,jdbcType=INTEGER}, 
      #{content,jdbcType=VARCHAR}, #{time,jdbcType=TIMESTAMP}, #{likes,jdbcType=INTEGER}, 
      #{comments,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.lemon.pojo.Comment">
    insert into comment
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        userId,
      </if>
      <if test="bookId != null">
        bookId,
      </if>
      <if test="content != null">
        content,
      </if>
      <if test="time != null">
        time,
      </if>
      <if test="likes != null">
        likes,
      </if>
      <if test="comments != null">
        comments,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        #{bookId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        #{likes,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        #{comments,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.lemon.pojo.CommentExample" resultType="java.lang.Long">
    select count(*) from comment
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update comment
    <set>
      <if test="record.id != null">
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.userId != null">
        userId = #{record.userId,jdbcType=INTEGER},
      </if>
      <if test="record.bookId != null">
        bookId = #{record.bookId,jdbcType=INTEGER},
      </if>
      <if test="record.content != null">
        content = #{record.content,jdbcType=VARCHAR},
      </if>
      <if test="record.time != null">
        time = #{record.time,jdbcType=TIMESTAMP},
      </if>
      <if test="record.likes != null">
        likes = #{record.likes,jdbcType=INTEGER},
      </if>
      <if test="record.comments != null">
        comments = #{record.comments,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update comment
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      bookId = #{record.bookId,jdbcType=INTEGER},
      content = #{record.content,jdbcType=VARCHAR},
      time = #{record.time,jdbcType=TIMESTAMP},
      likes = #{record.likes,jdbcType=INTEGER},
      comments = #{record.comments,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.lemon.pojo.Comment">
    update comment
    <set>
      <if test="userId != null">
        userId = #{userId,jdbcType=INTEGER},
      </if>
      <if test="bookId != null">
        bookId = #{bookId,jdbcType=INTEGER},
      </if>
      <if test="content != null">
        content = #{content,jdbcType=VARCHAR},
      </if>
      <if test="time != null">
        time = #{time,jdbcType=TIMESTAMP},
      </if>
      <if test="likes != null">
        likes = #{likes,jdbcType=INTEGER},
      </if>
      <if test="comments != null">
        comments = #{comments,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lemon.pojo.Comment">
    update comment
    set userId = #{userId,jdbcType=INTEGER},
      bookId = #{bookId,jdbcType=INTEGER},
      content = #{content,jdbcType=VARCHAR},
      time = #{time,jdbcType=TIMESTAMP},
      likes = #{likes,jdbcType=INTEGER},
      comments = #{comments,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>